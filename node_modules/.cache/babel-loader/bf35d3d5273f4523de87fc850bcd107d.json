{"ast":null,"code":"import { isNullOrUndefined, classList, createElement } from '@syncfusion/ej2-base';\nvar globalTimeOut = {};\nvar DEFT_MAT_WIDTH = 30;\nvar DEFT_FAB_WIDTH = 30;\nvar DEFT_TAIL_WIDTH = 24;\nvar DEFT_BOOT_WIDTH = 30;\nvar DEFT_BOOT4_WIDTH = 36;\nvar DEFT_BOOT5_WIDTH = 36;\nvar CLS_SHOWSPIN = 'e-spin-show';\nvar CLS_HIDESPIN = 'e-spin-hide';\nvar CLS_MATERIALSPIN = 'e-spin-material';\nvar CLS_FABRICSPIN = 'e-spin-fabric';\nvar CLS_TAILWINDSPIN = 'e-spin-tailwind';\nvar CLS_BOOTSPIN = 'e-spin-bootstrap';\nvar CLS_BOOT4SPIN = 'e-spin-bootstrap4';\nvar CLS_BOOT5SPIN = 'e-spin-bootstrap5';\nvar CLS_HIGHCONTRASTSPIN = 'e-spin-high-contrast';\nvar CLS_SPINWRAP = 'e-spinner-pane';\nvar CLS_SPININWRAP = 'e-spinner-inner';\nvar CLS_SPINCIRCLE = 'e-path-circle';\nvar CLS_SPINARC = 'e-path-arc';\nvar CLS_SPINLABEL = 'e-spin-label';\nvar CLS_SPINTEMPLATE = 'e-spin-template';\nvar spinTemplate = null;\nvar spinCSSClass = null; // eslint-disable-next-line\n\n/**\n  * Function to change the Spinners in a page globally from application end.\n  * ```\n  * E.g : blazorSpinner({ action: \"Create\", options: {target: targetElement}, type: \"\" });\n  * ```\n  *\n  * @param {string} action - specifies the string\n  * @param {CreateArgs} options - specifies the args\n  * @param {string} target - specifies the target\n  * @param {string} type - specifes the type\n  * @returns {void}\n  * @private\n  */\n\nexport function Spinner(action, options, target, type) {\n  switch (action) {\n    case 'Create':\n      /* eslint-disable */\n      var element = document.querySelector(options.target);\n      var args = {\n        type: type,\n        target: element,\n        cssClass: options.cssClass,\n        label: options.label,\n        width: options.width\n      };\n      /* eslint-enable */\n\n      createSpinner(args);\n      break;\n\n    case 'Show':\n      showSpinner(document.querySelector(target));\n      break;\n\n    case 'Hide':\n      hideSpinner(document.querySelector(target));\n      break;\n\n    case 'Set':\n      // eslint-disable-next-line\n      var setArgs = {\n        cssClass: options.cssClass,\n        type: type\n      };\n      setSpinner(setArgs);\n      break;\n  }\n}\n/**\n * Create a spinner for the specified target element.\n * ```\n * E.g : createSpinner({ target: targetElement, width: '34px', label: 'Loading..' });\n * ```\n *\n * @param {SpinnerArgs} args - specifies the args\n * @param {CreateElementArgs} internalCreateElement - specifis the element args\n * @returns {void}\n * @private\n */\n\nexport function createSpinner(args, internalCreateElement) {\n  if (!args.target) {\n    return;\n  }\n\n  var radius;\n  var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement; // eslint-disable-next-line\n\n  var container = create_spinner_container(args.target, makeElement);\n\n  if (!isNullOrUndefined(args.cssClass)) {\n    container.wrap.classList.add(args.cssClass);\n  }\n\n  if (!isNullOrUndefined(args.template) || !isNullOrUndefined(spinTemplate)) {\n    var template = !isNullOrUndefined(args.template) ? args.template : spinTemplate;\n    container.wrap.classList.add(CLS_SPINTEMPLATE);\n    replaceContent(container.wrap, template, spinCSSClass);\n  } else {\n    var theme = !isNullOrUndefined(args.type) ? args.type : getTheme(container.wrap);\n    var width = !isNullOrUndefined(args.width) ? args.width : undefined;\n    radius = calculateRadius(width, theme);\n    setTheme(theme, container.wrap, radius, makeElement);\n\n    if (!isNullOrUndefined(args.label)) {\n      createLabel(container.inner_wrap, args.label, makeElement);\n    }\n  }\n\n  container.wrap.classList.add(CLS_HIDESPIN);\n  container = null;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} label - specifies the string\n * @param {createElementParams} makeElement - specifies the element\n * @returns {HTMLElement} - returns the element\n */\n\nfunction createLabel(container, label, makeElement) {\n  var labelEle = makeElement('div', {});\n  labelEle.classList.add(CLS_SPINLABEL);\n  labelEle.innerHTML = label;\n  container.appendChild(labelEle);\n  return labelEle;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createMaterialSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Material',\n    radius: radius\n  };\n  create_material_element(container, uniqueID, makeElement, CLS_MATERIALSPIN);\n  mat_calculate_attributes(radius, container, 'Material', CLS_MATERIALSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createBootstrap4Spinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Bootstrap4',\n    radius: radius\n  };\n  create_material_element(container, uniqueID, makeElement, CLS_BOOT4SPIN);\n  mat_calculate_attributes(radius, container, 'Bootstrap4', CLS_BOOT4SPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createBootstrap5Spinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Bootstrap5',\n    radius: radius\n  };\n  create_material_element(container, uniqueID, makeElement, CLS_BOOT5SPIN);\n  mat_calculate_attributes(radius, container, 'Bootstrap5', CLS_BOOT5SPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} uniqueID - specifies the id.\n * @param {number} radius - specifies the radius\n * @returns {void}\n */\n\n\nfunction startMatAnimate(container, uniqueID, radius) {\n  var globalObject = {};\n  var timeOutVar = 0;\n  globalTimeOut[uniqueID].timeOut = 0;\n  globalObject[uniqueID] = globalVariables(uniqueID, radius, 0, 0); // eslint-disable-next-line\n\n  var spinnerInfo = {\n    uniqueID: uniqueID,\n    container: container,\n    globalInfo: globalObject,\n    timeOutVar: timeOutVar\n  };\n  animateMaterial(spinnerInfo);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createFabricSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Fabric',\n    radius: radius\n  };\n  create_fabric_element(container, uniqueID, CLS_FABRICSPIN, makeElement);\n  fb_calculate_attributes(radius, container, CLS_FABRICSPIN);\n}\n\nfunction createTailwindSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Tailwind',\n    radius: radius\n  };\n  create_fabric_element(container, uniqueID, CLS_TAILWINDSPIN, makeElement);\n  fb_calculate_attributes(radius, container, CLS_TAILWINDSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createHighContrastSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'HighContrast',\n    radius: radius\n  };\n  create_fabric_element(container, uniqueID, CLS_HIGHCONTRASTSPIN, makeElement);\n  fb_calculate_attributes(radius, container, CLS_HIGHCONTRASTSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @returns {string} - returns the string\n */\n\n\nfunction getTheme(container) {\n  var theme = window.getComputedStyle(container, ':after').getPropertyValue('content');\n  return theme.replace(/['\"]+/g, '');\n}\n/**\n *\n * @param {string} theme - specifies the theme\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction setTheme(theme, container, radius, makeElement) {\n  var innerContainer = container.querySelector('.' + CLS_SPININWRAP);\n  var svg = innerContainer.querySelector('svg');\n\n  if (!isNullOrUndefined(svg)) {\n    innerContainer.removeChild(svg);\n  }\n\n  switch (theme) {\n    case 'Material':\n      createMaterialSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Fabric':\n      createFabricSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Bootstrap':\n      createBootstrapSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'HighContrast':\n      createHighContrastSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Bootstrap4':\n      createBootstrap4Spinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Bootstrap5':\n      createBootstrap5Spinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Tailwind':\n    case 'Tailwind-dark':\n      createTailwindSpinner(innerContainer, radius, makeElement);\n      break;\n  }\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createBootstrapSpinner(innerContainer, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Bootstrap',\n    radius: radius\n  };\n  create_bootstrap_element(innerContainer, uniqueID, makeElement);\n  boot_calculate_attributes(innerContainer, radius);\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {string} uniqueID - specifies the id\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction create_bootstrap_element(innerContainer, uniqueID, makeElement) {\n  var svgBoot = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  var viewBoxValue = 64;\n  var trans = 32;\n  var defaultRadius = 2;\n  svgBoot.setAttribute('id', uniqueID);\n  svgBoot.setAttribute('class', CLS_BOOTSPIN);\n  svgBoot.setAttribute('viewBox', '0 0 ' + viewBoxValue + ' ' + viewBoxValue);\n  innerContainer.insertBefore(svgBoot, innerContainer.firstChild);\n\n  for (var item = 0; item <= 7; item++) {\n    var bootCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    bootCircle.setAttribute('class', CLS_SPINCIRCLE + '_' + item);\n    bootCircle.setAttribute('r', defaultRadius + '');\n    bootCircle.setAttribute('transform', 'translate(' + trans + ',' + trans + ')');\n    svgBoot.appendChild(bootCircle);\n  }\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {number} radius - specifies the radius\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction boot_calculate_attributes(innerContainer, radius) {\n  var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\n  var x = 0;\n  var y = 0;\n  var rad = 24;\n  svg.style.width = svg.style.height = radius + 'px';\n  var startArc = 90;\n\n  for (var item = 0; item <= 7; item++) {\n    var start = defineArcPoints(x, y, rad, startArc);\n    var circleEle = svg.querySelector('.' + CLS_SPINCIRCLE + '_' + item);\n    circleEle.setAttribute('cx', start.x + '');\n    circleEle.setAttribute('cy', start.y + '');\n    startArc = startArc >= 360 ? 0 : startArc;\n    startArc = startArc + 45;\n  }\n}\n/**\n *\n * @param {number} begin - specifies the number\n * @param {number} stop  - specifirs the number\n * @returns {number[]} - returns the array of number\n */\n\n\nfunction generateSeries(begin, stop) {\n  var series = [];\n  var start = begin;\n  var end = stop; // eslint-disable-next-line\n\n  var increment = false,\n      count = 1;\n  formSeries(start);\n  /**\n   *\n   * @param {number} i - specifies the number\n   * @returns {void}\n   */\n\n  function formSeries(i) {\n    series.push(i);\n\n    if (i !== end || count === 1) {\n      if (i <= start && i > 1 && !increment) {\n        i = parseFloat((i - 0.2).toFixed(2));\n      } else if (i === 1) {\n        i = 7;\n        i = parseFloat((i + 0.2).toFixed(2));\n        increment = true;\n      } else if (i < 8 && increment) {\n        i = parseFloat((i + 0.2).toFixed(2));\n\n        if (i === 8) {\n          increment = false;\n        }\n      } else if (i <= 8 && !increment) {\n        i = parseFloat((i - 0.2).toFixed(2));\n      }\n\n      ++count;\n      formSeries(i);\n    }\n  }\n\n  return series;\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @returns {void}\n */\n\n\nfunction animateBootstrap(innerContainer) {\n  var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\n  var id = svg.getAttribute('id');\n\n  for (var i = 1; i <= 8; i++) {\n    var circleEle = innerContainer.getElementsByClassName('e-path-circle_' + (i === 8 ? 0 : i))[0];\n    rotation(circleEle, i, i, generateSeries(i, i), id);\n  }\n  /**\n   *\n   * @param {SVGCircleElement} circle - specifies the circl element\n   * @param {number} start - specifies the number\n   * @param {number} end - specifies the end number\n   * @param {number} series - specifies the series\n   * @param {string} id - specifies the id\n   * @returns {void}\n   */\n\n\n  function rotation(circle, start, end, series, id) {\n    var count = 0;\n    boot_animate(start); // eslint-disable-next-line\n\n    function boot_animate(radius) {\n      if (globalTimeOut[id].isAnimate) {\n        ++count;\n        circle.setAttribute('r', radius + '');\n\n        if (count >= series.length) {\n          count = 0;\n        } // eslint-disable-next-line\n\n\n        globalTimeOut[id].timeOut = setTimeout(boot_animate.bind(null, series[count]), 18);\n      }\n    }\n  }\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} template - specifies the template\n * @param {string} cssClass - specifies the css class.\n * @returns {void}\n */\n\n\nfunction replaceContent(container, template, cssClass) {\n  if (!isNullOrUndefined(cssClass)) {\n    container.classList.add(cssClass);\n  }\n\n  var inner = container.querySelector('.e-spinner-inner');\n  inner.innerHTML = template;\n}\n/**\n *\n * @param {string} width - specifies the width\n * @param {string} theme - specifies the string\n * @returns {number} - returns the number\n */\n\n\nfunction calculateRadius(width, theme) {\n  var defaultSize;\n\n  switch (theme) {\n    case 'Material':\n      defaultSize = DEFT_MAT_WIDTH;\n      break;\n\n    case 'Fabric':\n      defaultSize = DEFT_FAB_WIDTH;\n      break;\n\n    case 'Tailwind':\n    case 'Tailwind-dark':\n      defaultSize = DEFT_FAB_WIDTH;\n      break;\n\n    case 'Bootstrap4':\n      defaultSize = DEFT_BOOT4_WIDTH;\n      break;\n\n    case 'Bootstrap5':\n      defaultSize = DEFT_BOOT5_WIDTH;\n      break;\n\n    default:\n      defaultSize = DEFT_BOOT_WIDTH;\n  }\n\n  width = width ? parseFloat(width + '') : defaultSize;\n  return theme === 'Bootstrap' ? width : width / 2;\n}\n/**\n *\n * @param {string} id - specifies the id\n * @param {number} radius - specifies the radius\n * @param {number} count - specifies the number count\n * @param {number} previousId - specifies the previous id\n * @returns {GlobalVariables} - returns the variables\n */\n\n\nfunction globalVariables(id, radius, count, previousId) {\n  return {\n    radius: radius,\n    count: count,\n    previousId: previousId\n  };\n}\n/**\n * @returns {string} - returns the string\n */\n// eslint-disable-next-line\n\n\nfunction random_generator() {\n  var random = '';\n  var combine = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < 5; i++) {\n    random += combine.charAt(Math.floor(Math.random() * combine.length));\n  }\n\n  return random;\n}\n/**\n *\n * @param {HTMLElement} innerCon - specifies the element\n * @param {string} uniqueID - specifies the unique id\n * @param {string} themeClass - specifies the string\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction create_fabric_element(innerCon, uniqueID, themeClass, makeElement) {\n  var svgFabric = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svgFabric.setAttribute('id', uniqueID);\n  svgFabric.setAttribute('class', themeClass);\n  var fabricCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  fabricCirclePath.setAttribute('class', CLS_SPINCIRCLE);\n  var fabricCircleArc = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  fabricCircleArc.setAttribute('class', CLS_SPINARC);\n  innerCon.insertBefore(svgFabric, innerCon.firstChild);\n  svgFabric.appendChild(fabricCirclePath);\n  svgFabric.appendChild(fabricCircleArc);\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {string} uniqueID - specifies the unique id\n * @param {createElementParams} makeElement - specifies the element\n * @param {string} cls - specifies the string\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction create_material_element(innerContainer, uniqueID, makeElement, cls) {\n  var svgMaterial = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  var matCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  svgMaterial.setAttribute('class', cls);\n  svgMaterial.setAttribute('id', uniqueID);\n  matCirclePath.setAttribute('class', CLS_SPINCIRCLE);\n  innerContainer.insertBefore(svgMaterial, innerContainer.firstChild);\n  svgMaterial.appendChild(matCirclePath);\n}\n/**\n *\n * @param {HTMLElement} target - specifies the element\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction create_spinner_container(target, makeElement) {\n  var spinnerContainer = makeElement('div', {});\n  var spinnerInnerContainer = makeElement('div', {});\n  spinnerContainer.classList.add(CLS_SPINWRAP);\n  spinnerInnerContainer.classList.add(CLS_SPININWRAP);\n  target.appendChild(spinnerContainer);\n  spinnerContainer.appendChild(spinnerInnerContainer); // eslint-disable-next-line\n\n  return {\n    wrap: spinnerContainer,\n    inner_wrap: spinnerInnerContainer\n  };\n}\n/**\n *\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner\n * @returns {void}\n */\n\n\nfunction animateMaterial(spinnerInfo) {\n  var start = 1;\n  var end = 149;\n  var duration = 1333;\n  var max = 75;\n  createCircle(start, end, easeAnimation, duration, spinnerInfo.globalInfo[spinnerInfo.uniqueID].count, max, spinnerInfo);\n  spinnerInfo.globalInfo[spinnerInfo.uniqueID].count = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].count % 4;\n}\n/**\n *\n * @param {number} start - specifies the number\n * @param {number} end - specifies the end number\n * @param {Function} easing - specifies the function\n * @param {number} duration - specifies the duration\n * @param {number} count - specifies the count\n * @param {number} max - specifies the max number\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner info\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction createCircle(start, end, easing, duration, count, max, spinnerInfo) {\n  var id = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId;\n  var startTime = new Date().getTime();\n  var change = end - start;\n  var diameter = getSize(spinnerInfo.globalInfo[spinnerInfo.uniqueID].radius * 2 + '');\n  var strokeSize = getStrokeSize(diameter);\n  var rotate = -90 * (spinnerInfo.globalInfo[spinnerInfo.uniqueID].count || 0);\n  mat_animation(spinnerInfo); // eslint-disable-next-line\n\n  function mat_animation(spinnerInfo) {\n    var currentTime = Math.max(0, Math.min(new Date().getTime() - startTime, duration));\n    updatePath(easing(currentTime, start, change, duration), spinnerInfo.container);\n\n    if (id === spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId && currentTime < duration) {\n      // eslint-disable-next-line\n      globalTimeOut[spinnerInfo.uniqueID].timeOut = setTimeout(mat_animation.bind(null, spinnerInfo), 1);\n    } else {\n      animateMaterial(spinnerInfo);\n    }\n  }\n  /**\n   *\n   * @param {number} value - specifies the number value\n   * @param {HTMLElement} container - specifies the container\n   * @returns {void}\n   */\n\n\n  function updatePath(value, container) {\n    if (!isNullOrUndefined(container.querySelector('svg.e-spin-material')) && !isNullOrUndefined(container.querySelector('svg.e-spin-material').querySelector('path.e-path-circle'))) {\n      var svg = container.querySelector('svg.e-spin-material');\n      var path = svg.querySelector('path.e-path-circle');\n      path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, value, max) + '');\n      path.setAttribute('transform', 'rotate(' + rotate + ' ' + diameter / 2 + ' ' + diameter / 2 + ')');\n    }\n  }\n}\n/**\n *\n * @param {number} radius - specifies the number\n * @param {HTMLElement} container - specifies the element\n * @param {string} type - specifies the string type\n * @param {string} cls - specifies the string\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction mat_calculate_attributes(radius, container, type, cls) {\n  var diameter = radius * 2;\n  var svg = container.querySelector('svg.' + cls);\n  var path = svg.querySelector('path.e-path-circle');\n  var strokeSize = getStrokeSize(diameter);\n  var transformOrigin = diameter / 2 + 'px';\n  svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\n  svg.style.width = svg.style.height = diameter + 'px';\n  svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\n  path.setAttribute('d', drawArc(diameter, strokeSize));\n\n  if (type === 'Material') {\n    path.setAttribute('stroke-width', strokeSize + '');\n    path.setAttribute('stroke-dasharray', (diameter - strokeSize) * Math.PI * 0.75 + '');\n    path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, 1, 75) + '');\n  }\n}\n/**\n *\n * @param {string} value - specifies the value\n * @returns {number} - returns the number\n */\n\n\nfunction getSize(value) {\n  var parsed = parseFloat(value);\n  return parsed;\n}\n/**\n *\n * @param {number} diameter - specifies the diameter\n * @param {number} strokeSize - specifies the size\n * @returns {string} - returns the string\n */\n\n\nfunction drawArc(diameter, strokeSize) {\n  var radius = diameter / 2;\n  var offset = strokeSize / 2;\n  return 'M' + radius + ',' + offset + 'A' + (radius - offset) + ',' + (radius - offset) + ' 0 1 1 ' + offset + ',' + radius;\n}\n/**\n *\n * @param {number} diameter - specifies the number\n * @returns {number} - returns the number\n */\n\n\nfunction getStrokeSize(diameter) {\n  return 10 / 100 * diameter;\n}\n/**\n *\n * @param {number} diameter - specifies the number\n * @param {number} strokeSize - specifies the stroke size\n * @param {number} value - specifies the value\n * @param {number} max - specifies the max number\n * @returns {number} - returns the number\n */\n\n\nfunction getDashOffset(diameter, strokeSize, value, max) {\n  return (diameter - strokeSize) * Math.PI * (3 * max / 100 - value / 100);\n}\n/**\n *\n * @param {number} current - specifies the number\n * @param {number} start - specifies the stroke size\n * @param {number} change - specifies the value\n * @param {number} duration - specifies the max number\n * @returns {number} - returns the number\n */\n\n\nfunction easeAnimation(current, start, change, duration) {\n  var timestamp = (current /= duration) * current;\n  var timecount = timestamp * current;\n  return start + change * (6 * timecount * timestamp + -15 * timestamp * timestamp + 10 * timecount);\n}\n/**\n *\n * @param {number} radius - specifies the number\n * @param {HTMLElement} innerConainer - specifies the element\n * @param {string} trgClass - specifies the class\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction fb_calculate_attributes(radius, innerConainer, trgClass) {\n  var centerX = radius;\n  var centerY = radius;\n  var diameter = radius * 2; // eslint-disable-next-line\n\n  var startArc = 315,\n      endArc = 45;\n  var svg = innerConainer.querySelector('.' + trgClass);\n  var circle = svg.querySelector('.e-path-circle');\n  var path = svg.querySelector('.e-path-arc');\n  var transformOrigin = diameter / 2 + 'px';\n  circle.setAttribute('d', defineCircle(centerX, centerY, radius));\n  path.setAttribute('d', defineArc(centerX, centerY, radius, startArc, endArc));\n  svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\n  svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\n  svg.style.width = svg.style.height = diameter + 'px';\n}\n/**\n *\n * @param {number} centerX - specifies the number\n * @param {number} centerY - specifies the stroke size\n * @param {number} radius - specifies the value\n * @param {number} angle - specifies the max number\n * @returns {number} - returns the number\n */\n\n\nfunction defineArcPoints(centerX, centerY, radius, angle) {\n  var radians = (angle - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(radians),\n    y: centerY + radius * Math.sin(radians)\n  };\n}\n/**\n *\n * @param {number} x - specifies the number\n * @param {number} y - specifies the stroke size\n * @param {number} radius - specifies the radius\n * @param {number} startArc - specifies the value\n * @param {number} endArc - specifies the max number\n * @returns {number} - returns the number\n */\n\n\nfunction defineArc(x, y, radius, startArc, endArc) {\n  var start = defineArcPoints(x, y, radius, endArc);\n  var end = defineArcPoints(x, y, radius, startArc);\n  var d = ['M', start.x, start.y, 'A', radius, radius, 0, 0, 0, end.x, end.y].join(' ');\n  return d;\n}\n/**\n *\n * @param {number} x - specifies the number\n * @param {number} y - specifies the stroke size\n * @param {number} radius - specifies the value\n * @returns {string} - returns the string\n */\n\n\nfunction defineCircle(x, y, radius) {\n  var d = ['M', x, y, 'm', -radius, 0, 'a', radius, radius, 0, 1, 0, radius * 2, 0, 'a', radius, radius, 0, 1, 0, -radius * 2, 0].join(' ');\n  return d;\n} // eslint-disable-next-line\n\n/**\n * Function to show the Spinner.\n *\n * @param {HTMLElement} container - Specify the target of the Spinner.\n * @returns {void}\n * @private\n */\n\n\nexport function showSpinner(container) {\n  showHideSpinner(container, false);\n  container = null;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {boolean} isHide - specifies the boolean\n * @returns {void}\n */\n\nfunction showHideSpinner(container, isHide) {\n  var spinnerWrap;\n\n  if (container) {\n    spinnerWrap = container.classList.contains(CLS_SPINWRAP) ? container : container.querySelector('.' + CLS_SPINWRAP);\n  }\n\n  if (container && spinnerWrap) {\n    var inner = spinnerWrap.querySelector('.' + CLS_SPININWRAP);\n    var spinCheck = void 0; // eslint-disable-next-line\n\n    spinCheck = isHide ? !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_HIDESPIN) : !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_SHOWSPIN);\n\n    if (spinCheck) {\n      var svgEle = spinnerWrap.querySelector('svg');\n\n      if (isNullOrUndefined(svgEle)) {\n        return;\n      }\n\n      var id = svgEle.getAttribute('id');\n      globalTimeOut[id].isAnimate = !isHide;\n\n      switch (globalTimeOut[id].type) {\n        case 'Material':\n          // eslint-disable-next-line\n          isHide ? clearTimeout(globalTimeOut[id].timeOut) : startMatAnimate(inner, id, globalTimeOut[id].radius);\n          break;\n\n        case 'Bootstrap':\n          // eslint-disable-next-line\n          isHide ? clearTimeout(globalTimeOut[id].timeOut) : animateBootstrap(inner);\n          break;\n      }\n    } // eslint-disable-next-line\n\n\n    isHide ? classList(spinnerWrap, [CLS_HIDESPIN], [CLS_SHOWSPIN]) : classList(spinnerWrap, [CLS_SHOWSPIN], [CLS_HIDESPIN]);\n    container = null;\n  }\n}\n/**\n * Function to hide the Spinner.\n *\n * @param {HTMLElement} container - Specify the target of the Spinner.\n * @returns {void}\n * @private\n */\n\n\nexport function hideSpinner(container) {\n  showHideSpinner(container, true);\n  container = null;\n} // eslint-disable-next-line\n\n/**\n  * Function to change the Spinners in a page globally from application end.\n  * ```\n  * E.g : setSpinner({ cssClass: 'custom-css'; type: 'Material' });\n  * ```\n  *\n  * @param {SetSpinnerArgs} args - specifies the args\n  * @param {createElementParams} internalCreateElement - specifies the element params\n  * @returns {void}\n  * @private\n  */\n\nexport function setSpinner(args, internalCreateElement) {\n  var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n\n  if (args.template !== undefined) {\n    spinTemplate = args.template;\n\n    if (args.template !== undefined) {\n      spinCSSClass = args.cssClass;\n    }\n  }\n\n  var container = document.querySelectorAll('.' + CLS_SPINWRAP);\n\n  for (var index = 0; index < container.length; index++) {\n    ensureTemplate(args.template, container[index], args.type, args.cssClass, makeElement);\n  }\n}\n/**\n *\n * @param {string} template - specifies the string\n * @param {HTMLElement} container - specifies the container\n * @param {string} theme - specifies the theme\n * @param {string} cssClass - specifies the string class\n * @param {createElementParams} makeEle - specifies the params\n * @returns {void}\n */\n\nfunction ensureTemplate(template, container, theme, cssClass, makeEle) {\n  if (isNullOrUndefined(template) && !container.classList.contains(CLS_SPINTEMPLATE)) {\n    replaceTheme(container, theme, cssClass, makeEle);\n\n    if (container.classList.contains(CLS_SHOWSPIN)) {\n      container.classList.remove(CLS_SHOWSPIN);\n      showSpinner(container);\n    } else {\n      container.classList.remove(CLS_HIDESPIN);\n      hideSpinner(container);\n    }\n  } else {\n    spinTemplate = template;\n\n    if (!isNullOrUndefined(cssClass)) {\n      spinCSSClass = cssClass;\n    }\n  }\n}\n/**\n *\n * @param {HTMLElement} container - specifies the container\n * @param {string} theme - specifies the theme\n * @param {string} cssClass - specifies the string class\n * @param {createElementParams} makeEle - specifies the params\n * @returns {void}\n */\n\n\nfunction replaceTheme(container, theme, cssClass, makeEle) {\n  if (!isNullOrUndefined(cssClass)) {\n    container.classList.add(cssClass);\n  }\n\n  var svgElement = container.querySelector('svg');\n  var radius = theme === 'Bootstrap' ? parseFloat(svgElement.style.height) : parseFloat(svgElement.style.height) / 2;\n  var classNames = svgElement.getAttribute('class');\n  var svgClassList = classNames.split(/\\s/);\n\n  if (svgClassList.indexOf('e-spin-material') >= 0) {\n    var id = svgElement.getAttribute('id');\n    clearTimeout(globalTimeOut[id].timeOut);\n  }\n\n  setTheme(theme, container, radius, makeEle);\n}","map":{"version":3,"names":["isNullOrUndefined","classList","createElement","globalTimeOut","DEFT_MAT_WIDTH","DEFT_FAB_WIDTH","DEFT_TAIL_WIDTH","DEFT_BOOT_WIDTH","DEFT_BOOT4_WIDTH","DEFT_BOOT5_WIDTH","CLS_SHOWSPIN","CLS_HIDESPIN","CLS_MATERIALSPIN","CLS_FABRICSPIN","CLS_TAILWINDSPIN","CLS_BOOTSPIN","CLS_BOOT4SPIN","CLS_BOOT5SPIN","CLS_HIGHCONTRASTSPIN","CLS_SPINWRAP","CLS_SPININWRAP","CLS_SPINCIRCLE","CLS_SPINARC","CLS_SPINLABEL","CLS_SPINTEMPLATE","spinTemplate","spinCSSClass","Spinner","action","options","target","type","element","document","querySelector","args","cssClass","label","width","createSpinner","showSpinner","hideSpinner","setArgs","setSpinner","internalCreateElement","radius","makeElement","container","create_spinner_container","wrap","add","template","replaceContent","theme","getTheme","undefined","calculateRadius","setTheme","createLabel","inner_wrap","labelEle","innerHTML","appendChild","createMaterialSpinner","uniqueID","random_generator","timeOut","create_material_element","mat_calculate_attributes","createBootstrap4Spinner","createBootstrap5Spinner","startMatAnimate","globalObject","timeOutVar","globalVariables","spinnerInfo","globalInfo","animateMaterial","createFabricSpinner","create_fabric_element","fb_calculate_attributes","createTailwindSpinner","createHighContrastSpinner","window","getComputedStyle","getPropertyValue","replace","innerContainer","svg","removeChild","createBootstrapSpinner","create_bootstrap_element","boot_calculate_attributes","svgBoot","createElementNS","viewBoxValue","trans","defaultRadius","setAttribute","insertBefore","firstChild","item","bootCircle","x","y","rad","style","height","startArc","start","defineArcPoints","circleEle","generateSeries","begin","stop","series","end","increment","count","formSeries","i","push","parseFloat","toFixed","animateBootstrap","id","getAttribute","getElementsByClassName","rotation","circle","boot_animate","isAnimate","length","setTimeout","bind","inner","defaultSize","previousId","random","combine","charAt","Math","floor","innerCon","themeClass","svgFabric","fabricCirclePath","fabricCircleArc","cls","svgMaterial","matCirclePath","spinnerContainer","spinnerInnerContainer","duration","max","createCircle","easeAnimation","easing","startTime","Date","getTime","change","diameter","getSize","strokeSize","getStrokeSize","rotate","mat_animation","currentTime","min","updatePath","value","path","getDashOffset","transformOrigin","drawArc","PI","parsed","offset","current","timestamp","timecount","innerConainer","trgClass","centerX","centerY","endArc","defineCircle","defineArc","angle","radians","cos","sin","d","join","showHideSpinner","isHide","spinnerWrap","contains","spinCheck","svgEle","clearTimeout","querySelectorAll","index","ensureTemplate","makeEle","replaceTheme","remove","svgElement","classNames","svgClassList","split","indexOf"],"sources":["/Users/Omar/Desktop/react-projects/dashboard/Dashboard/node_modules/@syncfusion/ej2-popups/src/spinner/spinner.js"],"sourcesContent":["import { isNullOrUndefined, classList, createElement } from '@syncfusion/ej2-base';\nvar globalTimeOut = {};\nvar DEFT_MAT_WIDTH = 30;\nvar DEFT_FAB_WIDTH = 30;\nvar DEFT_TAIL_WIDTH = 24;\nvar DEFT_BOOT_WIDTH = 30;\nvar DEFT_BOOT4_WIDTH = 36;\nvar DEFT_BOOT5_WIDTH = 36;\nvar CLS_SHOWSPIN = 'e-spin-show';\nvar CLS_HIDESPIN = 'e-spin-hide';\nvar CLS_MATERIALSPIN = 'e-spin-material';\nvar CLS_FABRICSPIN = 'e-spin-fabric';\nvar CLS_TAILWINDSPIN = 'e-spin-tailwind';\nvar CLS_BOOTSPIN = 'e-spin-bootstrap';\nvar CLS_BOOT4SPIN = 'e-spin-bootstrap4';\nvar CLS_BOOT5SPIN = 'e-spin-bootstrap5';\nvar CLS_HIGHCONTRASTSPIN = 'e-spin-high-contrast';\nvar CLS_SPINWRAP = 'e-spinner-pane';\nvar CLS_SPININWRAP = 'e-spinner-inner';\nvar CLS_SPINCIRCLE = 'e-path-circle';\nvar CLS_SPINARC = 'e-path-arc';\nvar CLS_SPINLABEL = 'e-spin-label';\nvar CLS_SPINTEMPLATE = 'e-spin-template';\nvar spinTemplate = null;\nvar spinCSSClass = null;\n// eslint-disable-next-line\n/**\n  * Function to change the Spinners in a page globally from application end.\n  * ```\n  * E.g : blazorSpinner({ action: \"Create\", options: {target: targetElement}, type: \"\" });\n  * ```\n  *\n  * @param {string} action - specifies the string\n  * @param {CreateArgs} options - specifies the args\n  * @param {string} target - specifies the target\n  * @param {string} type - specifes the type\n  * @returns {void}\n  * @private\n  */\nexport function Spinner(action, options, target, type) {\n    switch (action) {\n        case 'Create':\n            /* eslint-disable */\n            var element = document.querySelector(options.target);\n            var args = { type: type, target: element, cssClass: options.cssClass,\n                label: options.label, width: options.width };\n            /* eslint-enable */\n            createSpinner(args);\n            break;\n        case 'Show':\n            showSpinner(document.querySelector(target));\n            break;\n        case 'Hide':\n            hideSpinner(document.querySelector(target));\n            break;\n        case 'Set':\n            // eslint-disable-next-line\n            var setArgs = { cssClass: options.cssClass, type: type };\n            setSpinner(setArgs);\n            break;\n    }\n}\n/**\n * Create a spinner for the specified target element.\n * ```\n * E.g : createSpinner({ target: targetElement, width: '34px', label: 'Loading..' });\n * ```\n *\n * @param {SpinnerArgs} args - specifies the args\n * @param {CreateElementArgs} internalCreateElement - specifis the element args\n * @returns {void}\n * @private\n */\nexport function createSpinner(args, internalCreateElement) {\n    if (!args.target) {\n        return;\n    }\n    var radius;\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    // eslint-disable-next-line\n    var container = create_spinner_container(args.target, makeElement);\n    if (!isNullOrUndefined(args.cssClass)) {\n        container.wrap.classList.add(args.cssClass);\n    }\n    if (!isNullOrUndefined(args.template) || !isNullOrUndefined(spinTemplate)) {\n        var template = !isNullOrUndefined(args.template) ? args.template : spinTemplate;\n        container.wrap.classList.add(CLS_SPINTEMPLATE);\n        replaceContent(container.wrap, template, spinCSSClass);\n    }\n    else {\n        var theme = !isNullOrUndefined(args.type) ? args.type : getTheme(container.wrap);\n        var width = !isNullOrUndefined(args.width) ? args.width : undefined;\n        radius = calculateRadius(width, theme);\n        setTheme(theme, container.wrap, radius, makeElement);\n        if (!isNullOrUndefined(args.label)) {\n            createLabel(container.inner_wrap, args.label, makeElement);\n        }\n    }\n    container.wrap.classList.add(CLS_HIDESPIN);\n    container = null;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} label - specifies the string\n * @param {createElementParams} makeElement - specifies the element\n * @returns {HTMLElement} - returns the element\n */\nfunction createLabel(container, label, makeElement) {\n    var labelEle = makeElement('div', {});\n    labelEle.classList.add(CLS_SPINLABEL);\n    labelEle.innerHTML = label;\n    container.appendChild(labelEle);\n    return labelEle;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createMaterialSpinner(container, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Material', radius: radius };\n    create_material_element(container, uniqueID, makeElement, CLS_MATERIALSPIN);\n    mat_calculate_attributes(radius, container, 'Material', CLS_MATERIALSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createBootstrap4Spinner(container, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap4', radius: radius };\n    create_material_element(container, uniqueID, makeElement, CLS_BOOT4SPIN);\n    mat_calculate_attributes(radius, container, 'Bootstrap4', CLS_BOOT4SPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createBootstrap5Spinner(container, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap5', radius: radius };\n    create_material_element(container, uniqueID, makeElement, CLS_BOOT5SPIN);\n    mat_calculate_attributes(radius, container, 'Bootstrap5', CLS_BOOT5SPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} uniqueID - specifies the id.\n * @param {number} radius - specifies the radius\n * @returns {void}\n */\nfunction startMatAnimate(container, uniqueID, radius) {\n    var globalObject = {};\n    var timeOutVar = 0;\n    globalTimeOut[uniqueID].timeOut = 0;\n    globalObject[uniqueID] = globalVariables(uniqueID, radius, 0, 0);\n    // eslint-disable-next-line\n    var spinnerInfo = { uniqueID: uniqueID, container: container, globalInfo: globalObject, timeOutVar: timeOutVar };\n    animateMaterial(spinnerInfo);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createFabricSpinner(container, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Fabric', radius: radius };\n    create_fabric_element(container, uniqueID, CLS_FABRICSPIN, makeElement);\n    fb_calculate_attributes(radius, container, CLS_FABRICSPIN);\n}\nfunction createTailwindSpinner(container, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Tailwind', radius: radius };\n    create_fabric_element(container, uniqueID, CLS_TAILWINDSPIN, makeElement);\n    fb_calculate_attributes(radius, container, CLS_TAILWINDSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createHighContrastSpinner(container, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'HighContrast', radius: radius };\n    create_fabric_element(container, uniqueID, CLS_HIGHCONTRASTSPIN, makeElement);\n    fb_calculate_attributes(radius, container, CLS_HIGHCONTRASTSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @returns {string} - returns the string\n */\nfunction getTheme(container) {\n    var theme = window.getComputedStyle(container, ':after').getPropertyValue('content');\n    return theme.replace(/['\"]+/g, '');\n}\n/**\n *\n * @param {string} theme - specifies the theme\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction setTheme(theme, container, radius, makeElement) {\n    var innerContainer = container.querySelector('.' + CLS_SPININWRAP);\n    var svg = innerContainer.querySelector('svg');\n    if (!isNullOrUndefined(svg)) {\n        innerContainer.removeChild(svg);\n    }\n    switch (theme) {\n        case 'Material':\n            createMaterialSpinner(innerContainer, radius, makeElement);\n            break;\n        case 'Fabric':\n            createFabricSpinner(innerContainer, radius, makeElement);\n            break;\n        case 'Bootstrap':\n            createBootstrapSpinner(innerContainer, radius, makeElement);\n            break;\n        case 'HighContrast':\n            createHighContrastSpinner(innerContainer, radius, makeElement);\n            break;\n        case 'Bootstrap4':\n            createBootstrap4Spinner(innerContainer, radius, makeElement);\n            break;\n        case 'Bootstrap5':\n            createBootstrap5Spinner(innerContainer, radius, makeElement);\n            break;\n        case 'Tailwind':\n        case 'Tailwind-dark':\n            createTailwindSpinner(innerContainer, radius, makeElement);\n            break;\n    }\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createBootstrapSpinner(innerContainer, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap', radius: radius };\n    create_bootstrap_element(innerContainer, uniqueID, makeElement);\n    boot_calculate_attributes(innerContainer, radius);\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {string} uniqueID - specifies the id\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction create_bootstrap_element(innerContainer, uniqueID, makeElement) {\n    var svgBoot = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    var viewBoxValue = 64;\n    var trans = 32;\n    var defaultRadius = 2;\n    svgBoot.setAttribute('id', uniqueID);\n    svgBoot.setAttribute('class', CLS_BOOTSPIN);\n    svgBoot.setAttribute('viewBox', '0 0 ' + viewBoxValue + ' ' + viewBoxValue);\n    innerContainer.insertBefore(svgBoot, innerContainer.firstChild);\n    for (var item = 0; item <= 7; item++) {\n        var bootCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        bootCircle.setAttribute('class', CLS_SPINCIRCLE + '_' + item);\n        bootCircle.setAttribute('r', defaultRadius + '');\n        bootCircle.setAttribute('transform', 'translate(' + trans + ',' + trans + ')');\n        svgBoot.appendChild(bootCircle);\n    }\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {number} radius - specifies the radius\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction boot_calculate_attributes(innerContainer, radius) {\n    var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\n    var x = 0;\n    var y = 0;\n    var rad = 24;\n    svg.style.width = svg.style.height = radius + 'px';\n    var startArc = 90;\n    for (var item = 0; item <= 7; item++) {\n        var start = defineArcPoints(x, y, rad, startArc);\n        var circleEle = svg.querySelector('.' + CLS_SPINCIRCLE + '_' + item);\n        circleEle.setAttribute('cx', start.x + '');\n        circleEle.setAttribute('cy', start.y + '');\n        startArc = startArc >= 360 ? 0 : startArc;\n        startArc = startArc + 45;\n    }\n}\n/**\n *\n * @param {number} begin - specifies the number\n * @param {number} stop  - specifirs the number\n * @returns {number[]} - returns the array of number\n */\nfunction generateSeries(begin, stop) {\n    var series = [];\n    var start = begin;\n    var end = stop;\n    // eslint-disable-next-line\n    var increment = false, count = 1;\n    formSeries(start);\n    /**\n     *\n     * @param {number} i - specifies the number\n     * @returns {void}\n     */\n    function formSeries(i) {\n        series.push(i);\n        if (i !== end || count === 1) {\n            if (i <= start && i > 1 && !increment) {\n                i = parseFloat((i - 0.2).toFixed(2));\n            }\n            else if (i === 1) {\n                i = 7;\n                i = parseFloat((i + 0.2).toFixed(2));\n                increment = true;\n            }\n            else if (i < 8 && increment) {\n                i = parseFloat((i + 0.2).toFixed(2));\n                if (i === 8) {\n                    increment = false;\n                }\n            }\n            else if (i <= 8 && !increment) {\n                i = parseFloat((i - 0.2).toFixed(2));\n            }\n            ++count;\n            formSeries(i);\n        }\n    }\n    return series;\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @returns {void}\n */\nfunction animateBootstrap(innerContainer) {\n    var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\n    var id = svg.getAttribute('id');\n    for (var i = 1; i <= 8; i++) {\n        var circleEle = (innerContainer.getElementsByClassName('e-path-circle_' +\n            (i === 8 ? 0 : i))[0]);\n        rotation(circleEle, i, i, generateSeries(i, i), id);\n    }\n    /**\n     *\n     * @param {SVGCircleElement} circle - specifies the circl element\n     * @param {number} start - specifies the number\n     * @param {number} end - specifies the end number\n     * @param {number} series - specifies the series\n     * @param {string} id - specifies the id\n     * @returns {void}\n     */\n    function rotation(circle, start, end, series, id) {\n        var count = 0;\n        boot_animate(start);\n        // eslint-disable-next-line\n        function boot_animate(radius) {\n            if (globalTimeOut[id].isAnimate) {\n                ++count;\n                circle.setAttribute('r', radius + '');\n                if (count >= series.length) {\n                    count = 0;\n                }\n                // eslint-disable-next-line\n                globalTimeOut[id].timeOut = setTimeout(boot_animate.bind(null, series[count]), 18);\n            }\n        }\n    }\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} template - specifies the template\n * @param {string} cssClass - specifies the css class.\n * @returns {void}\n */\nfunction replaceContent(container, template, cssClass) {\n    if (!isNullOrUndefined(cssClass)) {\n        container.classList.add(cssClass);\n    }\n    var inner = container.querySelector('.e-spinner-inner');\n    inner.innerHTML = template;\n}\n/**\n *\n * @param {string} width - specifies the width\n * @param {string} theme - specifies the string\n * @returns {number} - returns the number\n */\nfunction calculateRadius(width, theme) {\n    var defaultSize;\n    switch (theme) {\n        case 'Material':\n            defaultSize = DEFT_MAT_WIDTH;\n            break;\n        case 'Fabric':\n            defaultSize = DEFT_FAB_WIDTH;\n            break;\n        case 'Tailwind':\n        case 'Tailwind-dark':\n            defaultSize = DEFT_FAB_WIDTH;\n            break;\n        case 'Bootstrap4':\n            defaultSize = DEFT_BOOT4_WIDTH;\n            break;\n        case 'Bootstrap5':\n            defaultSize = DEFT_BOOT5_WIDTH;\n            break;\n        default:\n            defaultSize = DEFT_BOOT_WIDTH;\n    }\n    width = width ? parseFloat(width + '') : defaultSize;\n    return theme === 'Bootstrap' ? width : width / 2;\n}\n/**\n *\n * @param {string} id - specifies the id\n * @param {number} radius - specifies the radius\n * @param {number} count - specifies the number count\n * @param {number} previousId - specifies the previous id\n * @returns {GlobalVariables} - returns the variables\n */\nfunction globalVariables(id, radius, count, previousId) {\n    return {\n        radius: radius,\n        count: count,\n        previousId: previousId\n    };\n}\n/**\n * @returns {string} - returns the string\n */\n// eslint-disable-next-line\nfunction random_generator() {\n    var random = '';\n    var combine = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < 5; i++) {\n        random += combine.charAt(Math.floor(Math.random() * combine.length));\n    }\n    return random;\n}\n/**\n *\n * @param {HTMLElement} innerCon - specifies the element\n * @param {string} uniqueID - specifies the unique id\n * @param {string} themeClass - specifies the string\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction create_fabric_element(innerCon, uniqueID, themeClass, makeElement) {\n    var svgFabric = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svgFabric.setAttribute('id', uniqueID);\n    svgFabric.setAttribute('class', themeClass);\n    var fabricCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    fabricCirclePath.setAttribute('class', CLS_SPINCIRCLE);\n    var fabricCircleArc = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    fabricCircleArc.setAttribute('class', CLS_SPINARC);\n    innerCon.insertBefore(svgFabric, innerCon.firstChild);\n    svgFabric.appendChild(fabricCirclePath);\n    svgFabric.appendChild(fabricCircleArc);\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {string} uniqueID - specifies the unique id\n * @param {createElementParams} makeElement - specifies the element\n * @param {string} cls - specifies the string\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction create_material_element(innerContainer, uniqueID, makeElement, cls) {\n    var svgMaterial = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    var matCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    svgMaterial.setAttribute('class', cls);\n    svgMaterial.setAttribute('id', uniqueID);\n    matCirclePath.setAttribute('class', CLS_SPINCIRCLE);\n    innerContainer.insertBefore(svgMaterial, innerContainer.firstChild);\n    svgMaterial.appendChild(matCirclePath);\n}\n/**\n *\n * @param {HTMLElement} target - specifies the element\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction create_spinner_container(target, makeElement) {\n    var spinnerContainer = makeElement('div', {});\n    var spinnerInnerContainer = makeElement('div', {});\n    spinnerContainer.classList.add(CLS_SPINWRAP);\n    spinnerInnerContainer.classList.add(CLS_SPININWRAP);\n    target.appendChild(spinnerContainer);\n    spinnerContainer.appendChild(spinnerInnerContainer);\n    // eslint-disable-next-line\n    return { wrap: spinnerContainer, inner_wrap: spinnerInnerContainer };\n}\n/**\n *\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner\n * @returns {void}\n */\nfunction animateMaterial(spinnerInfo) {\n    var start = 1;\n    var end = 149;\n    var duration = 1333;\n    var max = 75;\n    createCircle(start, end, easeAnimation, duration, spinnerInfo.globalInfo[spinnerInfo.uniqueID].count, max, spinnerInfo);\n    spinnerInfo.globalInfo[spinnerInfo.uniqueID].count = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].count % 4;\n}\n/**\n *\n * @param {number} start - specifies the number\n * @param {number} end - specifies the end number\n * @param {Function} easing - specifies the function\n * @param {number} duration - specifies the duration\n * @param {number} count - specifies the count\n * @param {number} max - specifies the max number\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner info\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction createCircle(start, end, easing, duration, count, max, spinnerInfo) {\n    var id = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId;\n    var startTime = new Date().getTime();\n    var change = end - start;\n    var diameter = getSize((spinnerInfo.globalInfo[spinnerInfo.uniqueID].radius * 2) + '');\n    var strokeSize = getStrokeSize(diameter);\n    var rotate = -90 * (spinnerInfo.globalInfo[spinnerInfo.uniqueID].count || 0);\n    mat_animation(spinnerInfo);\n    // eslint-disable-next-line\n    function mat_animation(spinnerInfo) {\n        var currentTime = Math.max(0, Math.min(new Date().getTime() - startTime, duration));\n        updatePath(easing(currentTime, start, change, duration), spinnerInfo.container);\n        if (id === spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId && currentTime < duration) {\n            // eslint-disable-next-line\n            globalTimeOut[spinnerInfo.uniqueID].timeOut = setTimeout(mat_animation.bind(null, spinnerInfo), 1);\n        }\n        else {\n            animateMaterial(spinnerInfo);\n        }\n    }\n    /**\n     *\n     * @param {number} value - specifies the number value\n     * @param {HTMLElement} container - specifies the container\n     * @returns {void}\n     */\n    function updatePath(value, container) {\n        if ((!isNullOrUndefined(container.querySelector('svg.e-spin-material')))\n            && (!isNullOrUndefined(container.querySelector('svg.e-spin-material').querySelector('path.e-path-circle')))) {\n            var svg = container.querySelector('svg.e-spin-material');\n            var path = svg.querySelector('path.e-path-circle');\n            path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, value, max) + '');\n            path.setAttribute('transform', 'rotate(' + (rotate) + ' ' + diameter / 2 + ' ' + diameter / 2 + ')');\n        }\n    }\n}\n/**\n *\n * @param {number} radius - specifies the number\n * @param {HTMLElement} container - specifies the element\n * @param {string} type - specifies the string type\n * @param {string} cls - specifies the string\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction mat_calculate_attributes(radius, container, type, cls) {\n    var diameter = radius * 2;\n    var svg = container.querySelector('svg.' + cls);\n    var path = svg.querySelector('path.e-path-circle');\n    var strokeSize = getStrokeSize(diameter);\n    var transformOrigin = (diameter / 2) + 'px';\n    svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\n    svg.style.width = svg.style.height = diameter + 'px';\n    svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\n    path.setAttribute('d', drawArc(diameter, strokeSize));\n    if (type === 'Material') {\n        path.setAttribute('stroke-width', strokeSize + '');\n        path.setAttribute('stroke-dasharray', ((diameter - strokeSize) * Math.PI * 0.75) + '');\n        path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, 1, 75) + '');\n    }\n}\n/**\n *\n * @param {string} value - specifies the value\n * @returns {number} - returns the number\n */\nfunction getSize(value) {\n    var parsed = parseFloat(value);\n    return parsed;\n}\n/**\n *\n * @param {number} diameter - specifies the diameter\n * @param {number} strokeSize - specifies the size\n * @returns {string} - returns the string\n */\nfunction drawArc(diameter, strokeSize) {\n    var radius = diameter / 2;\n    var offset = strokeSize / 2;\n    return 'M' + radius + ',' + offset\n        + 'A' + (radius - offset) + ',' + (radius - offset) + ' 0 1 1 ' + offset + ',' + radius;\n}\n/**\n *\n * @param {number} diameter - specifies the number\n * @returns {number} - returns the number\n */\nfunction getStrokeSize(diameter) {\n    return 10 / 100 * diameter;\n}\n/**\n *\n * @param {number} diameter - specifies the number\n * @param {number} strokeSize - specifies the stroke size\n * @param {number} value - specifies the value\n * @param {number} max - specifies the max number\n * @returns {number} - returns the number\n */\nfunction getDashOffset(diameter, strokeSize, value, max) {\n    return (diameter - strokeSize) * Math.PI * ((3 * (max) / 100) - (value / 100));\n}\n/**\n *\n * @param {number} current - specifies the number\n * @param {number} start - specifies the stroke size\n * @param {number} change - specifies the value\n * @param {number} duration - specifies the max number\n * @returns {number} - returns the number\n */\nfunction easeAnimation(current, start, change, duration) {\n    var timestamp = (current /= duration) * current;\n    var timecount = timestamp * current;\n    return start + change * (6 * timecount * timestamp + -15 * timestamp * timestamp + 10 * timecount);\n}\n/**\n *\n * @param {number} radius - specifies the number\n * @param {HTMLElement} innerConainer - specifies the element\n * @param {string} trgClass - specifies the class\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction fb_calculate_attributes(radius, innerConainer, trgClass) {\n    var centerX = radius;\n    var centerY = radius;\n    var diameter = radius * 2;\n    // eslint-disable-next-line\n    var startArc = 315, endArc = 45;\n    var svg = innerConainer.querySelector('.' + trgClass);\n    var circle = svg.querySelector('.e-path-circle');\n    var path = svg.querySelector('.e-path-arc');\n    var transformOrigin = (diameter / 2) + 'px';\n    circle.setAttribute('d', defineCircle(centerX, centerY, radius));\n    path.setAttribute('d', defineArc(centerX, centerY, radius, startArc, endArc));\n    svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\n    svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\n    svg.style.width = svg.style.height = diameter + 'px';\n}\n/**\n *\n * @param {number} centerX - specifies the number\n * @param {number} centerY - specifies the stroke size\n * @param {number} radius - specifies the value\n * @param {number} angle - specifies the max number\n * @returns {number} - returns the number\n */\nfunction defineArcPoints(centerX, centerY, radius, angle) {\n    var radians = (angle - 90) * Math.PI / 180.0;\n    return {\n        x: centerX + (radius * Math.cos(radians)),\n        y: centerY + (radius * Math.sin(radians))\n    };\n}\n/**\n *\n * @param {number} x - specifies the number\n * @param {number} y - specifies the stroke size\n * @param {number} radius - specifies the radius\n * @param {number} startArc - specifies the value\n * @param {number} endArc - specifies the max number\n * @returns {number} - returns the number\n */\nfunction defineArc(x, y, radius, startArc, endArc) {\n    var start = defineArcPoints(x, y, radius, endArc);\n    var end = defineArcPoints(x, y, radius, startArc);\n    var d = [\n        'M', start.x, start.y,\n        'A', radius, radius, 0, 0, 0, end.x, end.y\n    ].join(' ');\n    return d;\n}\n/**\n *\n * @param {number} x - specifies the number\n * @param {number} y - specifies the stroke size\n * @param {number} radius - specifies the value\n * @returns {string} - returns the string\n */\nfunction defineCircle(x, y, radius) {\n    var d = [\n        'M', x, y,\n        'm', -radius, 0,\n        'a', radius, radius, 0, 1, 0, radius * 2, 0,\n        'a', radius, radius, 0, 1, 0, -radius * 2, 0\n    ].join(' ');\n    return d;\n}\n// eslint-disable-next-line\n/**\n * Function to show the Spinner.\n *\n * @param {HTMLElement} container - Specify the target of the Spinner.\n * @returns {void}\n * @private\n */\nexport function showSpinner(container) {\n    showHideSpinner(container, false);\n    container = null;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {boolean} isHide - specifies the boolean\n * @returns {void}\n */\nfunction showHideSpinner(container, isHide) {\n    var spinnerWrap;\n    if (container) {\n        spinnerWrap = container.classList.contains(CLS_SPINWRAP) ? container :\n            container.querySelector('.' + CLS_SPINWRAP);\n    }\n    if (container && spinnerWrap) {\n        var inner = spinnerWrap.querySelector('.' + CLS_SPININWRAP);\n        var spinCheck = void 0;\n        // eslint-disable-next-line\n        spinCheck = isHide ? !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_HIDESPIN) :\n            !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_SHOWSPIN);\n        if (spinCheck) {\n            var svgEle = spinnerWrap.querySelector('svg');\n            if (isNullOrUndefined(svgEle)) {\n                return;\n            }\n            var id = svgEle.getAttribute('id');\n            globalTimeOut[id].isAnimate = !isHide;\n            switch (globalTimeOut[id].type) {\n                case 'Material':\n                    // eslint-disable-next-line\n                    isHide ? clearTimeout(globalTimeOut[id].timeOut) : startMatAnimate(inner, id, globalTimeOut[id].radius);\n                    break;\n                case 'Bootstrap':\n                    // eslint-disable-next-line\n                    isHide ? clearTimeout(globalTimeOut[id].timeOut) : animateBootstrap(inner);\n                    break;\n            }\n        }\n        // eslint-disable-next-line\n        isHide ? classList(spinnerWrap, [CLS_HIDESPIN], [CLS_SHOWSPIN]) : classList(spinnerWrap, [CLS_SHOWSPIN], [CLS_HIDESPIN]);\n        container = null;\n    }\n}\n/**\n * Function to hide the Spinner.\n *\n * @param {HTMLElement} container - Specify the target of the Spinner.\n * @returns {void}\n * @private\n */\nexport function hideSpinner(container) {\n    showHideSpinner(container, true);\n    container = null;\n}\n// eslint-disable-next-line\n/**\n  * Function to change the Spinners in a page globally from application end.\n  * ```\n  * E.g : setSpinner({ cssClass: 'custom-css'; type: 'Material' });\n  * ```\n  *\n  * @param {SetSpinnerArgs} args - specifies the args\n  * @param {createElementParams} internalCreateElement - specifies the element params\n  * @returns {void}\n  * @private\n  */\nexport function setSpinner(args, internalCreateElement) {\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    if (args.template !== undefined) {\n        spinTemplate = args.template;\n        if (args.template !== undefined) {\n            spinCSSClass = args.cssClass;\n        }\n    }\n    var container = document.querySelectorAll('.' + CLS_SPINWRAP);\n    for (var index = 0; index < container.length; index++) {\n        ensureTemplate(args.template, container[index], args.type, args.cssClass, makeElement);\n    }\n}\n/**\n *\n * @param {string} template - specifies the string\n * @param {HTMLElement} container - specifies the container\n * @param {string} theme - specifies the theme\n * @param {string} cssClass - specifies the string class\n * @param {createElementParams} makeEle - specifies the params\n * @returns {void}\n */\nfunction ensureTemplate(template, container, theme, cssClass, makeEle) {\n    if (isNullOrUndefined(template) && !container.classList.contains(CLS_SPINTEMPLATE)) {\n        replaceTheme(container, theme, cssClass, makeEle);\n        if (container.classList.contains(CLS_SHOWSPIN)) {\n            container.classList.remove(CLS_SHOWSPIN);\n            showSpinner(container);\n        }\n        else {\n            container.classList.remove(CLS_HIDESPIN);\n            hideSpinner(container);\n        }\n    }\n    else {\n        spinTemplate = template;\n        if (!isNullOrUndefined(cssClass)) {\n            spinCSSClass = cssClass;\n        }\n    }\n}\n/**\n *\n * @param {HTMLElement} container - specifies the container\n * @param {string} theme - specifies the theme\n * @param {string} cssClass - specifies the string class\n * @param {createElementParams} makeEle - specifies the params\n * @returns {void}\n */\nfunction replaceTheme(container, theme, cssClass, makeEle) {\n    if (!isNullOrUndefined(cssClass)) {\n        container.classList.add(cssClass);\n    }\n    var svgElement = container.querySelector('svg');\n    var radius = theme === 'Bootstrap' ? parseFloat(svgElement.style.height) : parseFloat(svgElement.style.height) / 2;\n    var classNames = svgElement.getAttribute('class');\n    var svgClassList = classNames.split(/\\s/);\n    if (svgClassList.indexOf('e-spin-material') >= 0) {\n        var id = svgElement.getAttribute('id');\n        clearTimeout(globalTimeOut[id].timeOut);\n    }\n    setTheme(theme, container, radius, makeEle);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}